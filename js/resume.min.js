var month=["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function generateResume(){getFile("./json/resume.json").then(items=>{BuildExperence(items.work),renderSkillsLists(items.skills),BuildHeader(items.basics),BuildEdu(items.education),BuildBasic(items.basics)})}function BuildBasic(basicItem){basicItem=`
   <div class="card text-white gradient-card">
    <img class="card-img-top" src="img/original/${basicItem.picture}" alt="me">
    <div class="card-body">
      ${basicItem.summary}
      <ul class="list-group custom-transparent-list text-white mt-2">
        <li class="list-group-item d-flex justify-content-between align-items-start  custom-transparent-item">
          <div class="ms-2 me-auto">
            <div class="fw-bold"><a href="tel:${basicItem.phone}">${basicItem.phone}</a></div>
            Cellular
          </div>
          <i class="fa-solid fa-2x fa-phone"></i>      
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-start  custom-transparent-item">
        <div class="ms-2 me-auto">
          <div class="fw-bold"><a href="mailto:${basicItem.email}">${basicItem.email}</a></div>
          personal
        </div>
        <i class="fa-solid fa-2x fa-envelope"></i>      
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-start  custom-transparent-item">
        <div class="ms-2 me-auto">
          <div class="fw-bold">${basicItem.region}</div>
          region I live in
        </div>
        <i class="fa-solid fa-2x fa-house"></i>      
        </li>
             ${buildprofiles(basicItem.profiles)}
      </ul>
    <div>
  </div>`;document.getElementById("BasicItems").innerHTML=basicItem}function buildprofiles(listItems){let str=[];return listItems.forEach(element=>{str.push(`
  <li class="list-group-item d-flex justify-content-between align-items-start  custom-transparent-item">
    <div class="ms-2 me-auto">
      <div class="fw-bold"><a href="${element.url}" target="_blank">@${element.username}</a></div>
      ${element.network}
    </div>
    <i class="${socialMediaIcon(element.network)} fa-2x"></i>      
  </li>`)}),str.join("")}function BuildHeader(basicItem){document.getElementById("HeaderItem").innerHTML=(basicItem=>`
  <div class="lh-100"><h1 class="mb-0 text-white lh-100 display-1"> ${basicItem.name}</h1><p>
  ${basicItem.headline}</p></div>`)(basicItem)}function BuildEdu(eduItems){let strings=[];eduItems.forEach(edu=>{strings.push(`
  <div>
    <img src="img/original/${(edu=edu).institution}.webp" width="32" height="32" alt="${edu.institution}" class="left"><br />
    <span class="lead">${edu.area}</span><br/>
    <span class="text-muted">${edu.studyType}</span><br/>
    <span class="lead">${edu.institution}</span><br/>
    <span class="text-muted">${parseWorkDate(edu.startDate)} - ${parseWorkDate(edu.endDate)}</span>
  </div>`)}),document.getElementById("EduItems").insertAdjacentHTML("beforeend",strings.join(""))}function renderSkillsLists(skills){var topSkillsContainer=document.getElementById("SkillItems"),otherSkillsContainer=document.getElementById("otherSkillsList"),topSkillsHtml=skills.slice(0,4).map(skill=>`
    <li class="list-group-item custom-transparent-item">
      <h3 class="h5">${skill.name}</h3>
      <div class="custom-progress" id="customProgressBar">
      <div class="progress-bar" style="width: ${getProgressBarWidth(skill.rating)}%"></div>
      <div class="progress-dot" style="left: calc(${getProgressBarWidth(skill.rating)}% - 5px"></div>
    </div>

      </li>
  `).join(""),topSkillsContainer=(topSkillsContainer.innerHTML=topSkillsHtml,skills.slice(4).map(skill=>`
    
  <span class="badge line text-white custom-pill"> ${skill.name}</span>
    
  `).join(""));otherSkillsContainer.innerHTML=`
    <h4 class="card-title">Other Skills</h4>
    ${topSkillsContainer}
  `}function getProgressBarWidth(rating){return 20*rating||50}function BuildSkills(skillsItems){let listItems=[];skillsItems.forEach(element=>{listItems.push(`
<li class="list-group-item d-flex justify-content-between align-items-center">
<!-- <div class="progress">
    <div class="progress-bar" role="progressbar" style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">${(element=element).name}</div>
  </div> -->
<div><img src="/img/original/${ImageHelper(element.name)}.webp" height="16" width="16" alt="${element.name} image" />${element.name}</div>
<span class="badge badge-dark badge-pill" title="${element.level} [${element.yearsOfExperience} years experence]">${element.level}</span>
</li>`)}),document.getElementById("SkillItems").innerHTML=listItems.join("")}function listBind(ObjectTag,SourceTag,ObjectsToBind){SourceTag=document.getElementById(SourceTag).innerHTML;let temp=Handlebars.compile(SourceTag),MainContainer=document.getElementById(ObjectTag);null!=ObjectsToBind&&ObjectsToBind.forEach(item=>{item=temp(item);MainContainer.insertAdjacentHTML("beforeend",item)})}function BuildExperence(experenceItems){let items=[];experenceItems.forEach(ex=>{items.push(`
  <div class="media text-muted pt-3 lh-125 border-bottom border-gray">
  <div class="container">
  <div class="row">
    <div class="col-md-9">
    <h2 class="h4">
    ${(ex=ex).position} @ <span class="text-muted">${ex.company}</span></h2>
    </div>
    <div class="col-md-3 text-right">
    ${ex.location}
    <img class="" width="32" height="32" src="img/original/${ex.company}.webp" alt="${ex.company}" />
    </div>
  </div>
  <div class="row">
    <span class="lead"> <span class="text-primary">${parseWorkDate(ex.startDate)} - ${parseWorkDate(ex.endDate)}</span> ${calculateDuration(ex.start,ex.end)}
  </div>
  <div class="row">
  <div class="col">
  <p class="media-body pb-3 mb-0"> ${ex.summary}
  <ul>${generateHighlightlist(ex.highlights)}</ul>
  </p>
  </div>
  </div>
</div>   
  </div>
  `)}),document.getElementById("ExperenceItems").insertAdjacentHTML("beforeend",items.join(""))}function calculateDuration(start,end){var today=new Date,start=new Date(start.year,start.month-1),end=(console.log(end),end.year?new Date(end.year,end.month-1):today);let yearDiff=end.getFullYear()-start.getFullYear(),monthDiff=end.getMonth()-start.getMonth();return monthDiff<0&&(yearDiff--,monthDiff+=12),0===yearDiff?monthDiff+" "+(1===monthDiff?"month":"months"):(today=1===yearDiff?"year":"years",end=1===monthDiff?"month":"months",0===monthDiff?yearDiff+" "+today:`${yearDiff} ${today} ${monthDiff} `+end)}function generateHighlightlist(highlights){let response=[];return highlights.forEach(highlight=>{response.push(`<li>${highlight}</li>`)}),response.join("")}function socialMediaIcon(media){switch(media){case"GitHub":return"fab fa-github-square";case"LinkedIn":return"fab fa-linkedin";case"Facebook":return"fab fa-facebook-square";default:return"far fa-user"}}function ImageHelper(media){media=media.toLowerCase();return"c#"==media?"csharp":"vb.net"==media?"vb":"asp.net"==media?"ASP":"python"==media?"python":0<media.indexOf("scrum")?"scrum":0<media.indexOf("jquery")?"javascript":0<media.indexOf("sql")?"db":0<media.indexOf("cognitive")||0<media.indexOf("bot")?"bot":"check"}function getFile(fileUrl){return fetch(fileUrl).then(response=>{if(response.ok)return response.json();throw new Error(response.status+" "+response.statusText)}).catch(error=>{window.alert(error)})}function parseWorkDate(strDate){return 0<strDate.length?(strDate=strDate.split("-"),month[parseInt(strDate[1])]+" "+strDate[0]):"Present"}generateResume();